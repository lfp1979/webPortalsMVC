<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
	  <context:annotation-config/>
	  <context:component-scan base-package="ok3w.*"/>
  		<aop:aspectj-autoproxy/>
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource">
		<property name="url"
			value="jdbc:mysql://localhost:3306/ok3w?useUnicode=true&amp;characterEncoding=utf-8">
		</property>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
		<property name="username" value="root"></property>
		<property name="password" value="lfp"></property>
	</bean>

	 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:ok3w/dao/*.xml"></property>
    </bean>
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <!--basePackage指定要扫描的包，在此包之下的映射器都会被搜索到。 可指定多个包，包与包之间用逗号或分号分隔-->
        <property name="basePackage" value="ok3w.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>   
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<bean id="TransactionAttribute"
	    class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
	    <property name="properties">
	       <props>
	          <prop key="*">PROPAGATION_REQUIRED</prop>
	       </props>
	    </property>
	</bean>
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
			id="internalResourceViewResolver">
		<property name="ViewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- springmvc提供的简单异常处理器 -->
	<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="error"/>
	</bean>
	<!-- 开启注解这里需要添加个validator-->
	 <!--开启注解  -->    
	 <mvc:annotation-driven validator="validator"/>
	 <!-- 验证配置，告知srpingmvc，我使用的是Hibernate验证框架来完成的验证 -->
	     <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
	         <property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
	     </bean>
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
	</beans>